独占锁：指该锁一次只能被一个线程所持有。对ReentrantLock和Synchronized而言都是独占锁

共享锁：指该锁可被多个线程所持有
对ReentrantReadWriteLock其读锁是共享锁，其写锁是独占锁
读锁的共享锁可保证并发读是非常高效的，读写、写读、写写的过程师互斥

应用场景：缓存需要读和写分离

多个线程同时读一个资源类没有任何问题，所以为了满足并发性，读取共享资源应该可以同时进行
但是如果有一个线程想去写共享资源，就不应该再有其它线程可以对资源进行读或写

总结： 读-读能共存
       读-写不能共存
	   写-写不能共存
	   
	   代码演示见doc的java文件
https://www.cnblogs.com/liang1101/p/6475555.html?utm_source=itdadao&utm_medium=referral